[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 edgeColor : hint_color;
uniform sampler2D noise;

void fragment()
{
	COLOR = texture(TEXTURE,UV);
	if (COLOR.a == 0.0)
	{
		
		if (texture(TEXTURE,UV + vec2(-1,0) * TEXTURE_PIXEL_SIZE).a == 1.0 || texture(TEXTURE,UV + vec2(1,0) * TEXTURE_PIXEL_SIZE).a == 1.0 || texture(TEXTURE,UV + vec2(0,1) * TEXTURE_PIXEL_SIZE).a == 1.0 || texture(TEXTURE,UV + vec2(0,-1) * TEXTURE_PIXEL_SIZE).a == 1.0)
		{
			COLOR = (edgeColor + texture(noise,SCREEN_UV))/2.0;
		}

	}
}"

[sub_resource type="OpenSimplexNoise" id=3]
period = 31.7
persistence = 0.262
lacunarity = 0.52

[sub_resource type="NoiseTexture" id=4]
seamless = true
noise = SubResource( 3 )

[resource]
shader = SubResource( 1 )
shader_param/edgeColor = Color( 0.376471, 0.0980392, 0.0901961, 1 )
shader_param/noise = SubResource( 4 )
