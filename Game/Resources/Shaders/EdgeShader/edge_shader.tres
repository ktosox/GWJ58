[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 edgeColor : hint_color;
uniform sampler2D gradient;

void fragment()
{
	COLOR = texture(TEXTURE,UV);
	if (COLOR.a == 0.0)
	{
		
		if (texture(TEXTURE,UV + vec2(-1,0) * TEXTURE_PIXEL_SIZE).a == 1.0 || texture(TEXTURE,UV + vec2(1,0) * TEXTURE_PIXEL_SIZE).a == 1.0 || texture(TEXTURE,UV + vec2(0,1) * TEXTURE_PIXEL_SIZE).a == 1.0 || texture(TEXTURE,UV + vec2(0,-1) * TEXTURE_PIXEL_SIZE).a == 1.0)
		{
			COLOR = (edgeColor + texture(gradient,SCREEN_UV))/2.0;
		}

	}
}"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.23871, 0.95082 )

[sub_resource type="GradientTexture2D" id=3]
gradient = SubResource( 2 )
width = 512
height = 512
fill_from = Vector2( 0.652778, 0.361111 )
fill_to = Vector2( 0.75463, 0.217593 )
repeat = 2

[resource]
shader = SubResource( 1 )
shader_param/edgeColor = Color( 0.682353, 0.403922, 0.396078, 1 )
shader_param/gradient = SubResource( 3 )
